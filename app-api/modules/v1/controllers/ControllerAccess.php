<?php

namespace api\modules\v1\controllers;

use api\modules\v1\helpers\StateCode;
use common\components\ControllerAPI;
use common\helpers\security\SecurityHelper;
use common\helpers\users\UserHelper;
use Yii;
use yii\db\Query;
use yii\web\UnauthorizedHttpException;

/**
 * Default controller for the `v1` module
 */
class ControllerAccess extends ControllerAPI
{
	public $userToken;        //返回个推表
	public $user_id;        //用户ID
	public $provider_id;    //小帮ID
	public $is_provider = false;

	public function _init()
	{
		parent::_init(); // TODO: Change the autogenerated stub
	}

	public function beforeAction($action)
	{
		$this->enableCsrfValidation = false;
		$access_token               = Yii::$app->request->getBodyParam("key", Yii::$app->request->getBodyParam("access_token"));
		if (parent::beforeAction($action)) {

			$userToken = SecurityHelper::getUserToken($access_token);
			$newToken  = UserHelper::getUserToken($access_token);
			if ($userToken) {

				$this->user_id     = $userToken['user_id'];
				$this->provider_id = $userToken['shop_id'];
				$is_shop           = $userToken['is_shop'];
				$work_status       = $userToken['work_status'];

				if ($is_shop && $work_status) {
					$this->is_provider = true;
				}

			} else if ($newToken) {

				$this->user_id     = $newToken['user_id'];
				$this->provider_id = $newToken['provider_id'];    //未申请小帮，该值为0

			} else {
				throw new UnauthorizedHttpException('You are requesting with an invalid credential.', 20000);
			}

			return true;
		} else {

			throw new UnauthorizedHttpException('No access token.', 401);
		}
	}

	public function getUserInfo()
	{
		return UserHelper::getUserInfo($this->user_id);

	}

	public function verbs()
	{
		return ['*' => ['POST']];
	}

	public function setCodeMessage($code)
	{
		$this->_code    = $code;
		$this->_message = StateCode::get($code);
	}
}
