<?php

namespace pay\controllers;

use common\components\Ref;
use common\helpers\orders\BizSendHelper;
use common\helpers\orders\ErrandBuyHelper;
use common\helpers\orders\ErrandDoHelper;
use common\helpers\orders\ErrandSendHelper;
use common\helpers\orders\TripBikeHelper;
use common\helpers\payment\AlipayHelper;
use common\helpers\payment\TransactionHelper;
use common\helpers\payment\WalletHelper;
use common\helpers\shop\ShopHelper;
use common\helpers\utils\QueueHelper;
use Yii;
use yii\web\Controller;

/**
 * 支付宝回调处理
 * Class AlipayController
 * @package pay\controllers
 */
class AlipayController extends Controller
{
	public function init()
	{
		parent::init(); // TODO: Change the autogenerated stub

		$this->enableCsrfValidation = false;
	}

	public function actionNotify()
	{

		Yii::$app->debug->pay_info("alipay_notify_post", $_POST);

		if (AlipayHelper::notify()) {
			$trade_no       = $_POST['trade_no'];
			$transaction_no = $_POST['out_trade_no'];
			$fee            = $_POST['buyer_pay_amount'];
			$data           = json_encode($_POST);
			$orderRes       = TransactionHelper::successOrderTrade($transaction_no, $trade_no, Ref::PAYMENT_TYPE_ALIPAY, $fee, "支付宝异步回调", $data);
			if ($orderRes) {

				QueueHelper::errandSendOrder($orderRes['ids_ref']);//派发订单
				echo "success";

				Yii::$app->debug->pay_info("actionNotify_res", "success");
			}
		} else {
			echo "fail";
			Yii::$app->debug->pay_info("actionNotify_res", "success");
		}
		exit;
	}


	//快送->帮我买->添加配送费用
	public function actionErrandBuyAddExpense()
	{
		Yii::$app->debug->pay_info("errand_buy_add_expense_post", $_POST);
		if (AlipayHelper::notify()) {
			$trade_no       = $_POST['trade_no'];
			$transaction_no = $_POST['out_trade_no'];
			$fee            = $_POST['buyer_pay_amount'];
			$data           = json_encode($_POST);

			$updateRes = ErrandBuyHelper::payExpenseSuccess($transaction_no, $trade_no, Ref::PAYMENT_TYPE_ALIPAY, $fee, "支付宝异步回调", $data);
			if ($updateRes) {
				echo "success";
				Yii::$app->debug->pay_info("actionErrandBuyAddExpense_res", "success");
			}
		} else {
			echo "fail";
			Yii::$app->debug->pay_info("actionErrandBuyAddExpense_res", "fail");
		}
		exit;
	}

	//快送->帮我买->添加配送费用
	public function actionErrandSendAddCustomFee()
	{
		Yii::$app->debug->pay_info("errand_send_add_custom_fee", $_POST);
		if (AlipayHelper::notify()) {
			$trade_no       = $_POST['trade_no'];
			$transaction_no = $_POST['out_trade_no'];
			$fee            = $_POST['buyer_pay_amount'];
			$data           = json_encode($_POST);

			$updateRes = ErrandSendHelper::addCustomFeeSuccess($transaction_no, $trade_no, Ref::PAYMENT_TYPE_ALIPAY, $fee, "支付宝异步回调", $data);
			if ($updateRes) {
				echo "success";
				Yii::$app->debug->pay_info("actionErrandSendAddCustomFee_res", "success");
			}
		} else {
			echo "fail";
			Yii::$app->debug->pay_info("actionErrandSendAddCustomFee_res", "fail");
		}
		exit;
	}

	//快送->帮我办->添加小费
	public function actionErrandDoAddCustomFee()
	{
		Yii::$app->debug->pay_info("errand_do_add_custom_fee_post", $_POST);

		if (AlipayHelper::notify()) {
			$trade_no       = $_POST['trade_no'];
			$transaction_no = $_POST['out_trade_no'];
			$fee            = $_POST['buyer_pay_amount'];
			$data           = json_encode($_POST);
			$orderRes       = ErrandDoHelper::addCustomFeeSuccess($transaction_no, $trade_no, Ref::PAYMENT_TYPE_ALIPAY, $fee, "支付宝异步回调", $data);
			if ($orderRes) {
				echo "success";
				Yii::$app->debug->pay_info("actionErrandDoAddCustomFee_res", "success");
			}
		} else {
			echo "fail";
			Yii::$app->debug->pay_info("actionErrandDoAddCustomFee_res", "fail");
		}
		exit;
	}

	/**
	 * 缴纳保证金
	 */
	public function actionBailPay()
	{
		Yii::$app->debug->pay_info("errand_do_add_custom_fee_post", $_POST);

		if (AlipayHelper::notify()) {
			$trade_no       = $_POST['trade_no'];
			$transaction_no = $_POST['out_trade_no'];
			$fee            = $_POST['buyer_pay_amount'];
			$data           = json_encode($_POST);
			$orderRes       = ShopHelper::bailPaySuccess($transaction_no, $trade_no, $fee, "支付宝异步回调", $data);
			if ($orderRes) {
				echo "success";
				Yii::$app->debug->pay_info("actionErrandDoAddCustomFee_res", "success");
			}
		} else {
			echo "fail";
			Yii::$app->debug->pay_info("actionErrandDoAddCustomFee_res", "fail");
		}
		exit;
	}

	/**
	 * 充值
	 */
	public function actionRechargePay()
	{
		Yii::$app->debug->pay_info("balance_recharge_pay", $_POST);

		if (AlipayHelper::notify()) {
			$trade_no       = $_POST['trade_no'];
			$transaction_no = $_POST['out_trade_no'];
			$fee            = $_POST['buyer_pay_amount'];
			$data           = json_encode($_POST);
			$orderRes       = WalletHelper::rechargePaySuccess($transaction_no, $trade_no, $fee, "支付宝异步回调", $data, Ref::PAYMENT_TYPE_ALIPAY);
			if ($orderRes) {
				echo "success";
				Yii::$app->debug->pay_info("actionWalletRecharge_res", "success");
			}
		} else {
			echo "fail";
			Yii::$app->debug->pay_info("actionWalletRecharge_res", "fail");
		}
		exit;
	}


	/**
	 * 企业送支付
	 */
	public function actionBizOrderPayment()
	{
		Yii::$app->debug->pay_info("balance_recharge_pay", $_POST);

		if (AlipayHelper::notify()) {
			$trade_no       = $_POST['trade_no'];
			$transaction_no = $_POST['out_trade_no'];
			$fee            = $_POST['buyer_pay_amount'];
			$data           = json_encode($_POST);
			$orderRes       = BizSendHelper::orderPaymentSuccess($transaction_no, $trade_no, Ref::PAYMENT_TYPE_ALIPAY, $fee, "支付宝异步回调", $data);
			if ($orderRes) {
				echo "success";
				Yii::$app->debug->pay_info("actionWalletRecharge_res", "success");
			}
		} else {
			echo "fail";
			Yii::$app->debug->pay_info("actionWalletRecharge_res", "fail");
		}
		exit;
	}

	/**
	 * 小帮出行支付
	 */
	public function actionTripPayment()
	{
		Yii::$app->debug->pay_info("balance_recharge_pay", $_POST);

		if (AlipayHelper::notify()) {
			$trade_no       = $_POST['trade_no'];
			$transaction_no = $_POST['out_trade_no'];
			$fee            = $_POST['buyer_pay_amount'];
			$data           = json_encode($_POST);
			$orderRes       = TripBikeHelper::tripPaymentSuccess($transaction_no, $trade_no, Ref::PAYMENT_TYPE_ALIPAY, $fee, "支付宝异步回调", $data);
			if ($orderRes) {
				echo "success";
				Yii::$app->debug->pay_info("actionWalletRecharge_res", "success");
			}
		} else {
			echo "fail";
			Yii::$app->debug->pay_info("actionWalletRecharge_res", "fail");
		}
		exit;
	}

	/**
	 * 小帮出行 添加赏金
	 */
	public function actionTripAddReward()
	{
		Yii::$app->debug->pay_info("balance_recharge_pay", $_POST);

		if (AlipayHelper::notify()) {
			$trade_no       = $_POST['trade_no'];
			$transaction_no = $_POST['out_trade_no'];
			$fee            = $_POST['buyer_pay_amount'];
			$data           = json_encode($_POST);
			$orderRes       = TripBikeHelper::addRewardSuccess($transaction_no, $trade_no, Ref::PAYMENT_TYPE_ALIPAY, $fee, "支付宝异步回调", $data);
			if ($orderRes) {
				echo "success";
				Yii::$app->debug->pay_info("actionWalletRecharge_res", "success");
			}
		} else {
			echo "fail";
			Yii::$app->debug->pay_info("actionWalletRecharge_res", "fail");
		}
		exit;
	}

}

//{
//    "gmt_create": "2017-07-06 09:20:11",
//    "charset": "UTF-8",
//    "seller_email": "pay@281.com.cn",
//    "subject": "test2",
//    "sign": "gUgfUQkm3BWngTD0nneCN9JXFoTp44IQEUnt87iQlEMvkY2rczOKPIKBmWLYxVQ2Cbznqu6eRYKgsds6iGN3t4AbHM8ioaQQEIxbEJjsSpx3+9ypTIJUE3R/JVpIQ/Tw6TamwWmNMiK1WwmySVSPHUceiu2XLs6Lh8LZW2aSvpRxFuroTs/UR2mQtzoHd9uGBTzFmuyRnVFNKNrZ9nuzjmItWRgLk6EqZwKn+wPtF5CDveA6N8dMuGbzjLt8Mm4uT95eTErieG+xpZelTtl5FNP+IahfLu5jyT69zbwV9JCwD4vfORQOpx5JVS7HvzWKgW5dXN/pxIG75R7W44AmBg==",
//    "body": "test",
//    "buyer_id": "2088302342279275",
//    "invoice_amount": "0.01",
//    "notify_id": "fc9a1ce5ee8af1abab2c1c3fcd1bf0fi32",
//    "fund_bill_list": "[{\"amount\":\"0.01\",\"fundChannel\":\"ALIPAYACCOUNT\"}]",
//    "notify_type": "trade_status_sync",
//    "trade_status": "TRADE_SUCCESS",
//    "receipt_amount": "0.01",
//    "app_id": "2017070407638595",
//    "buyer_pay_amount": "0.01",
//    "sign_type": "RSA2",
//    "seller_id": "2088911101928301",
//    "gmt_payment": "2017-07-06 09:20:12",
//    "notify_time": "2017-07-06 09:20:12",
//    "version": "1.0",
//    "out_trade_no": "e1499303999",
//    "total_amount": "0.01",
//    "trade_no": "2017070621001004270212095833",
//    "auth_app_id": "2017070407638595",
//    "buyer_logon_id": "yan***@163.com",
//    "point_amount": "0.00"
//}


